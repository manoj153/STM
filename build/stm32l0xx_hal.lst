ARM GAS  /tmp/ccI1gqJf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32l0xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.weak	HAL_MspInit
  22              		.code	16
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB39:
  27              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @file    stm32l0xx_hal.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @version V1.8.1
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @date    14-April-2017
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @verbatim
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The HAL contains two APIs categories: 
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Common HAL APIs
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Services HAL APIs
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @endverbatim
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @attention
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      this list of conditions and the following disclaimer.
ARM GAS  /tmp/ccI1gqJf.s 			page 2


  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #include "stm32l0xx_hal.h"
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup STM32L0xx_HAL_Driver
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL 
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief HAL module driver.
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Constants
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @defgroup SysTick System Tick
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @brief uwTick_variable uwTick variable
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  */
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __IO uint32_t uwTick;
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @defgroup HAL_Version HAL Version
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
ARM GAS  /tmp/ccI1gqJf.s 			page 3


  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @brief STM32L0xx HAL Driver version number V1.8.1
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  */
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB1   (0x08U) /*!< [23:16] sub1 version */
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION         ((__STM32L0xx_HAL_VERSION_MAIN << 24U)\
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB1 << 16U)\
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB2 << 8U )\
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_RC))
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFFU)
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */ 
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @defgroup HAL_Private HAL Private
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */ 
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */ 
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions HAL Exported Functions
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    [..]  This section provides functions allowing to:
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           is needed and the backup domain when enabled.
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           Tick interrupt priority. 
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              handled in milliseconds basis.
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
ARM GAS  /tmp/ccI1gqJf.s 			page 4


 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             ISR process will be blocked. 
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the Flash prefetch, Flash preread and Buffer cache,
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       the clock configuration
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Once done, time base tick start incrementing.
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure Buffer cache, Flash prefetch,  Flash preread */ 
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (BUFFER_CACHE_DISABLE != 0)
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_BUFFER_CACHE_DISABLE();
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* BUFFER_CACHE_DISABLE */
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREREAD_ENABLE != 0)
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Init the low level hardware */
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_MspInit();
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        of time base.
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is optional.
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
ARM GAS  /tmp/ccI1gqJf.s 			page 5


 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* De-Init the low level hardware */
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_MspDeInit();
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Initializes the MSP.
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspInit(void)
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  28              		.loc 1 226 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  33              		.loc 1 230 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE39:
  39 0002 C046     		.section	.text.HAL_MspDeInit,"ax",%progbits
  40              		.align	2
  41              		.weak	HAL_MspDeInit
  42              		.code	16
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB40:
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  DeInitializes the MSP.
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspDeInit(void)
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  47              		.loc 1 237 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
ARM GAS  /tmp/ccI1gqJf.s 			page 6


 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  52              		.loc 1 241 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE40:
  58 0002 C046     		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	2
  60              		.global	HAL_DeInit
  61              		.code	16
  62              		.thumb_func
  64              	HAL_DeInit:
  65              	.LFB38:
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 200 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  75              		.loc 1 202 0
  76 0002 084B     		ldr	r3, .L4
  77 0004 0121     		movs	r1, #1
  78 0006 4942     		rsbs	r1, r1, #0
  79 0008 9962     		str	r1, [r3, #40]
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  80              		.loc 1 203 0
  81 000a 0022     		movs	r2, #0
  82 000c 9A62     		str	r2, [r3, #40]
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  83              		.loc 1 205 0
  84 000e 5962     		str	r1, [r3, #36]
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  85              		.loc 1 206 0
  86 0010 5A62     		str	r2, [r3, #36]
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  87              		.loc 1 208 0
  88 0012 1962     		str	r1, [r3, #32]
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  89              		.loc 1 209 0
  90 0014 1A62     		str	r2, [r3, #32]
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
  91              		.loc 1 211 0
  92 0016 D961     		str	r1, [r3, #28]
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  93              		.loc 1 212 0
  94 0018 DA61     		str	r2, [r3, #28]
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     
  95              		.loc 1 215 0
  96 001a FFF7FEFF 		bl	HAL_MspDeInit
ARM GAS  /tmp/ccI1gqJf.s 			page 7


  97              	.LVL0:
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  98              		.loc 1 219 0
  99 001e 0020     		movs	r0, #0
 100              		@ sp needed
 101 0020 10BD     		pop	{r4, pc}
 102              	.L5:
 103 0022 C046     		.align	2
 104              	.L4:
 105 0024 00100240 		.word	1073876992
 106              		.cfi_endproc
 107              	.LFE38:
 109              		.global	__aeabi_uidiv
 110              		.section	.text.HAL_InitTick,"ax",%progbits
 111              		.align	2
 112              		.weak	HAL_InitTick
 113              		.code	16
 114              		.thumb_func
 116              	HAL_InitTick:
 117              	.LFB41:
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the source of the time base. 
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Tick interrupt priority.
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementation  in user file.
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 118              		.loc 1 261 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL1:
 123 0000 10B5     		push	{r4, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128 0002 0400     		movs	r4, r0
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 129              		.loc 1 263 0
 130 0004 074B     		ldr	r3, .L7
 131 0006 1868     		ldr	r0, [r3]
 132              	.LVL2:
ARM GAS  /tmp/ccI1gqJf.s 			page 8


 133 0008 FA21     		movs	r1, #250
 134 000a 8900     		lsls	r1, r1, #2
 135 000c FFF7FEFF 		bl	__aeabi_uidiv
 136              	.LVL3:
 137 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 138              	.LVL4:
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 139              		.loc 1 266 0
 140 0014 0022     		movs	r2, #0
 141 0016 2100     		movs	r1, r4
 142 0018 0120     		movs	r0, #1
 143 001a 4042     		rsbs	r0, r0, #0
 144 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 145              	.LVL5:
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    /* Return function status */
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 146              		.loc 1 270 0
 147 0020 0020     		movs	r0, #0
 148              		@ sp needed
 149              	.LVL6:
 150 0022 10BD     		pop	{r4, pc}
 151              	.L8:
 152              		.align	2
 153              	.L7:
 154 0024 00000000 		.word	SystemCoreClock
 155              		.cfi_endproc
 156              	.LFE41:
 158              		.section	.text.HAL_Init,"ax",%progbits
 159              		.align	2
 160              		.global	HAL_Init
 161              		.code	16
 162              		.thumb_func
 164              	HAL_Init:
 165              	.LFB37:
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure Buffer cache, Flash prefetch,  Flash preread */ 
 166              		.loc 1 168 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 10B5     		push	{r4, lr}
 171              	.LCFI2:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 175              		.loc 1 175 0
 176 0002 064A     		ldr	r2, .L10
 177 0004 1168     		ldr	r1, [r2]
 178 0006 4023     		movs	r3, #64
 179 0008 0B43     		orrs	r3, r1
 180 000a 1360     		str	r3, [r2]
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 181              		.loc 1 184 0
ARM GAS  /tmp/ccI1gqJf.s 			page 9


 182 000c 0020     		movs	r0, #0
 183 000e FFF7FEFF 		bl	HAL_InitTick
 184              	.LVL7:
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 185              		.loc 1 187 0
 186 0012 FFF7FEFF 		bl	HAL_MspInit
 187              	.LVL8:
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 188              		.loc 1 191 0
 189 0016 0020     		movs	r0, #0
 190              		@ sp needed
 191 0018 10BD     		pop	{r4, pc}
 192              	.L11:
 193 001a C046     		.align	2
 194              	.L10:
 195 001c 00200240 		.word	1073881088
 196              		.cfi_endproc
 197              	.LFE37:
 199              		.section	.text.HAL_IncTick,"ax",%progbits
 200              		.align	2
 201              		.weak	HAL_IncTick
 202              		.code	16
 203              		.thumb_func
 205              	HAL_IncTick:
 206              	.LFB42:
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2 
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    Peripheral Control functions
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Control functions #####
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a tick value in millisecond
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Suspend the time base source interrupt
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Resume the time base source interrupt
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the HAL API driver version
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device identifier
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device revision identifier
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Configure low power mode behavior when the MCU is in Debug mode
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Manage the VEREFINT feature (activation, lock, output selection)
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        used as application time base.
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       in Systick ISR.
ARM GAS  /tmp/ccI1gqJf.s 			page 10


 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      implementations in user file.
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_IncTick(void)
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 207              		.loc 1 308 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uwTick++;
 212              		.loc 1 309 0
 213 0000 024A     		ldr	r2, .L13
 214 0002 1368     		ldr	r3, [r2]
 215 0004 0133     		adds	r3, r3, #1
 216 0006 1360     		str	r3, [r2]
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 217              		.loc 1 310 0
 218              		@ sp needed
 219 0008 7047     		bx	lr
 220              	.L14:
 221 000a C046     		.align	2
 222              	.L13:
 223 000c 00000000 		.word	uwTick
 224              		.cfi_endproc
 225              	.LFE42:
 227              		.section	.text.HAL_GetTick,"ax",%progbits
 228              		.align	2
 229              		.weak	HAL_GetTick
 230              		.code	16
 231              		.thumb_func
 233              	HAL_GetTick:
 234              	.LFB43:
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval tick value
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 235              		.loc 1 319 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return uwTick;
 240              		.loc 1 320 0
 241 0000 014B     		ldr	r3, .L16
 242 0002 1868     		ldr	r0, [r3]
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 243              		.loc 1 321 0
 244              		@ sp needed
 245 0004 7047     		bx	lr
 246              	.L17:
ARM GAS  /tmp/ccI1gqJf.s 			page 11


 247 0006 C046     		.align	2
 248              	.L16:
 249 0008 00000000 		.word	uwTick
 250              		.cfi_endproc
 251              	.LFE43:
 253              		.section	.text.HAL_Delay,"ax",%progbits
 254              		.align	2
 255              		.weak	HAL_Delay
 256              		.code	16
 257              		.thumb_func
 259              	HAL_Delay:
 260              	.LFB44:
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function provides accurate delay (in ms) based on a variable incremented.
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is incremented.
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 261              		.loc 1 334 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL9:
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              	.LCFI4:
 273              		.cfi_def_cfa_offset 16
 274 0004 0190     		str	r0, [sp, #4]
 275              	.LVL10:
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t tickstart = 0U;
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   tickstart = HAL_GetTick();
 276              		.loc 1 336 0
 277 0006 FFF7FEFF 		bl	HAL_GetTick
 278              	.LVL11:
 279 000a 0400     		movs	r4, r0
 280              	.LVL12:
 281              	.L19:
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   while((HAL_GetTick() - tickstart) < Delay)
 282              		.loc 1 337 0 discriminator 1
 283 000c FFF7FEFF 		bl	HAL_GetTick
 284              	.LVL13:
 285 0010 001B     		subs	r0, r0, r4
 286 0012 019B     		ldr	r3, [sp, #4]
 287 0014 9842     		cmp	r0, r3
 288 0016 F9D3     		bcc	.L19
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
ARM GAS  /tmp/ccI1gqJf.s 			page 12


 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 289              		.loc 1 340 0
 290 0018 02B0     		add	sp, sp, #8
 291              		@ sp needed
 292              	.LVL14:
 293 001a 10BD     		pop	{r4, pc}
 294              		.cfi_endproc
 295              	.LFE44:
 297              		.section	.text.HAL_SuspendTick,"ax",%progbits
 298              		.align	2
 299              		.weak	HAL_SuspendTick
 300              		.code	16
 301              		.thumb_func
 303              	HAL_SuspendTick:
 304              	.LFB45:
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Suspends the Tick increment.
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is suspended.
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_SuspendTick(void)
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 305              		.loc 1 353 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Disable SysTick Interrupt */
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 310              		.loc 1 355 0
 311 0000 024A     		ldr	r2, .L21
 312 0002 1368     		ldr	r3, [r2]
 313 0004 0221     		movs	r1, #2
 314 0006 8B43     		bics	r3, r1
 315 0008 1360     		str	r3, [r2]
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 316              		.loc 1 356 0
 317              		@ sp needed
 318 000a 7047     		bx	lr
 319              	.L22:
 320              		.align	2
 321              	.L21:
 322 000c 10E000E0 		.word	-536813552
 323              		.cfi_endproc
 324              	.LFE45:
 326              		.section	.text.HAL_ResumeTick,"ax",%progbits
 327              		.align	2
 328              		.weak	HAL_ResumeTick
 329              		.code	16
 330              		.thumb_func
ARM GAS  /tmp/ccI1gqJf.s 			page 13


 332              	HAL_ResumeTick:
 333              	.LFB46:
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Resumes the Tick increment.
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is resumed.
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_ResumeTick(void)
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 334              		.loc 1 369 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Enable SysTick Interrupt */
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 339              		.loc 1 371 0
 340 0000 024A     		ldr	r2, .L24
 341 0002 1168     		ldr	r1, [r2]
 342 0004 0223     		movs	r3, #2
 343 0006 0B43     		orrs	r3, r1
 344 0008 1360     		str	r3, [r2]
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 345              		.loc 1 372 0
 346              		@ sp needed
 347 000a 7047     		bx	lr
 348              	.L25:
 349              		.align	2
 350              	.L24:
 351 000c 10E000E0 		.word	-536813552
 352              		.cfi_endproc
 353              	.LFE46:
 355              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 356              		.align	2
 357              		.global	HAL_GetHalVersion
 358              		.code	16
 359              		.thumb_func
 361              	HAL_GetHalVersion:
 362              	.LFB47:
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the HAL revision
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 363              		.loc 1 379 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
ARM GAS  /tmp/ccI1gqJf.s 			page 14


 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return __STM32L0xx_HAL_VERSION;
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 368              		.loc 1 381 0
 369 0000 0048     		ldr	r0, .L27
 370              		@ sp needed
 371 0002 7047     		bx	lr
 372              	.L28:
 373              		.align	2
 374              	.L27:
 375 0004 00010801 		.word	17301760
 376              		.cfi_endproc
 377              	.LFE47:
 379              		.section	.text.HAL_GetREVID,"ax",%progbits
 380              		.align	2
 381              		.global	HAL_GetREVID
 382              		.code	16
 383              		.thumb_func
 385              	HAL_GetREVID:
 386              	.LFB48:
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the device revision identifier.
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device revision identifier
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetREVID(void)
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 387              		.loc 1 388 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 392              		.loc 1 389 0
 393 0000 014B     		ldr	r3, .L30
 394 0002 1868     		ldr	r0, [r3]
 395 0004 000C     		lsrs	r0, r0, #16
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 396              		.loc 1 390 0
 397              		@ sp needed
 398 0006 7047     		bx	lr
 399              	.L31:
 400              		.align	2
 401              	.L30:
 402 0008 00580140 		.word	1073829888
 403              		.cfi_endproc
 404              	.LFE48:
 406              		.section	.text.HAL_GetDEVID,"ax",%progbits
 407              		.align	2
 408              		.global	HAL_GetDEVID
 409              		.code	16
 410              		.thumb_func
 412              	HAL_GetDEVID:
 413              	.LFB49:
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the device identifier.
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
ARM GAS  /tmp/ccI1gqJf.s 			page 15


 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 414              		.loc 1 397 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 419              		.loc 1 398 0
 420 0000 024B     		ldr	r3, .L33
 421 0002 1868     		ldr	r0, [r3]
 422 0004 0005     		lsls	r0, r0, #20
 423 0006 000D     		lsrs	r0, r0, #20
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 424              		.loc 1 399 0
 425              		@ sp needed
 426 0008 7047     		bx	lr
 427              	.L34:
 428 000a C046     		.align	2
 429              	.L33:
 430 000c 00580140 		.word	1073829888
 431              		.cfi_endproc
 432              	.LFE49:
 434              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 435              		.align	2
 436              		.global	HAL_DBGMCU_EnableDBGSleepMode
 437              		.code	16
 438              		.thumb_func
 440              	HAL_DBGMCU_EnableDBGSleepMode:
 441              	.LFB50:
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during SLEEP mode
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 442              		.loc 1 406 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 447              		.loc 1 407 0
 448 0000 024A     		ldr	r2, .L36
 449 0002 5168     		ldr	r1, [r2, #4]
 450 0004 0123     		movs	r3, #1
 451 0006 0B43     		orrs	r3, r1
 452 0008 5360     		str	r3, [r2, #4]
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 453              		.loc 1 408 0
 454              		@ sp needed
 455 000a 7047     		bx	lr
 456              	.L37:
 457              		.align	2
 458              	.L36:
ARM GAS  /tmp/ccI1gqJf.s 			page 16


 459 000c 00580140 		.word	1073829888
 460              		.cfi_endproc
 461              	.LFE50:
 463              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 464              		.align	2
 465              		.global	HAL_DBGMCU_DisableDBGSleepMode
 466              		.code	16
 467              		.thumb_func
 469              	HAL_DBGMCU_DisableDBGSleepMode:
 470              	.LFB51:
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during SLEEP mode
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 471              		.loc 1 415 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 476              		.loc 1 416 0
 477 0000 024A     		ldr	r2, .L39
 478 0002 5368     		ldr	r3, [r2, #4]
 479 0004 0121     		movs	r1, #1
 480 0006 8B43     		bics	r3, r1
 481 0008 5360     		str	r3, [r2, #4]
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 482              		.loc 1 417 0
 483              		@ sp needed
 484 000a 7047     		bx	lr
 485              	.L40:
 486              		.align	2
 487              	.L39:
 488 000c 00580140 		.word	1073829888
 489              		.cfi_endproc
 490              	.LFE51:
 492              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 493              		.align	2
 494              		.global	HAL_DBGMCU_EnableDBGStopMode
 495              		.code	16
 496              		.thumb_func
 498              	HAL_DBGMCU_EnableDBGStopMode:
 499              	.LFB52:
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STOP mode
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 500              		.loc 1 424 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccI1gqJf.s 			page 17


 504              		@ link register save eliminated.
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 505              		.loc 1 425 0
 506 0000 024A     		ldr	r2, .L42
 507 0002 5168     		ldr	r1, [r2, #4]
 508 0004 0223     		movs	r3, #2
 509 0006 0B43     		orrs	r3, r1
 510 0008 5360     		str	r3, [r2, #4]
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 511              		.loc 1 426 0
 512              		@ sp needed
 513 000a 7047     		bx	lr
 514              	.L43:
 515              		.align	2
 516              	.L42:
 517 000c 00580140 		.word	1073829888
 518              		.cfi_endproc
 519              	.LFE52:
 521              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 522              		.align	2
 523              		.global	HAL_DBGMCU_DisableDBGStopMode
 524              		.code	16
 525              		.thumb_func
 527              	HAL_DBGMCU_DisableDBGStopMode:
 528              	.LFB53:
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STOP mode
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 529              		.loc 1 433 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 534              		.loc 1 434 0
 535 0000 024A     		ldr	r2, .L45
 536 0002 5368     		ldr	r3, [r2, #4]
 537 0004 0221     		movs	r1, #2
 538 0006 8B43     		bics	r3, r1
 539 0008 5360     		str	r3, [r2, #4]
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 540              		.loc 1 435 0
 541              		@ sp needed
 542 000a 7047     		bx	lr
 543              	.L46:
 544              		.align	2
 545              	.L45:
 546 000c 00580140 		.word	1073829888
 547              		.cfi_endproc
 548              	.LFE53:
 550              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 551              		.align	2
 552              		.global	HAL_DBGMCU_EnableDBGStandbyMode
ARM GAS  /tmp/ccI1gqJf.s 			page 18


 553              		.code	16
 554              		.thumb_func
 556              	HAL_DBGMCU_EnableDBGStandbyMode:
 557              	.LFB54:
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STANDBY mode
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 558              		.loc 1 442 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 563              		.loc 1 443 0
 564 0000 024A     		ldr	r2, .L48
 565 0002 5168     		ldr	r1, [r2, #4]
 566 0004 0423     		movs	r3, #4
 567 0006 0B43     		orrs	r3, r1
 568 0008 5360     		str	r3, [r2, #4]
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 569              		.loc 1 444 0
 570              		@ sp needed
 571 000a 7047     		bx	lr
 572              	.L49:
 573              		.align	2
 574              	.L48:
 575 000c 00580140 		.word	1073829888
 576              		.cfi_endproc
 577              	.LFE54:
 579              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 580              		.align	2
 581              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 582              		.code	16
 583              		.thumb_func
 585              	HAL_DBGMCU_DisableDBGStandbyMode:
 586              	.LFB55:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STANDBY mode
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 587              		.loc 1 451 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 592              		.loc 1 452 0
 593 0000 024A     		ldr	r2, .L51
 594 0002 5368     		ldr	r3, [r2, #4]
 595 0004 0421     		movs	r1, #4
ARM GAS  /tmp/ccI1gqJf.s 			page 19


 596 0006 8B43     		bics	r3, r1
 597 0008 5360     		str	r3, [r2, #4]
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 598              		.loc 1 453 0
 599              		@ sp needed
 600 000a 7047     		bx	lr
 601              	.L52:
 602              		.align	2
 603              	.L51:
 604 000c 00580140 		.word	1073829888
 605              		.cfi_endproc
 606              	.LFE55:
 608              		.section	.text.HAL_DBGMCU_DBG_EnableLowPowerConfig,"ax",%progbits
 609              		.align	2
 610              		.global	HAL_DBGMCU_DBG_EnableLowPowerConfig
 611              		.code	16
 612              		.thumb_func
 614              	HAL_DBGMCU_DBG_EnableLowPowerConfig:
 615              	.LFB56:
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enable low power mode behavior when the MCU is in Debug mode.
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_EnableLowPowerConfig(uint32_t Periph)
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 616              		.loc 1 465 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL15:
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   DBGMCU->CR |= Periph;
 622              		.loc 1 469 0
 623 0000 024B     		ldr	r3, .L54
 624 0002 5A68     		ldr	r2, [r3, #4]
 625 0004 1043     		orrs	r0, r2
 626              	.LVL16:
 627 0006 5860     		str	r0, [r3, #4]
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 628              		.loc 1 471 0
 629              		@ sp needed
 630 0008 7047     		bx	lr
 631              	.L55:
 632 000a C046     		.align	2
 633              	.L54:
 634 000c 00580140 		.word	1073829888
 635              		.cfi_endproc
ARM GAS  /tmp/ccI1gqJf.s 			page 20


 636              	.LFE56:
 638              		.section	.text.HAL_DBGMCU_DBG_DisableLowPowerConfig,"ax",%progbits
 639              		.align	2
 640              		.global	HAL_DBGMCU_DBG_DisableLowPowerConfig
 641              		.code	16
 642              		.thumb_func
 644              	HAL_DBGMCU_DBG_DisableLowPowerConfig:
 645              	.LFB57:
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disable low power mode behavior when the MCU is in Debug mode.
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_DisableLowPowerConfig(uint32_t Periph)
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 646              		.loc 1 482 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651              	.LVL17:
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     DBGMCU->CR &= ~Periph;
 652              		.loc 1 486 0
 653 0000 024A     		ldr	r2, .L57
 654 0002 5368     		ldr	r3, [r2, #4]
 655 0004 8343     		bics	r3, r0
 656 0006 5360     		str	r3, [r2, #4]
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 657              		.loc 1 488 0
 658              		@ sp needed
 659 0008 7047     		bx	lr
 660              	.L58:
 661 000a C046     		.align	2
 662              	.L57:
 663 000c 00580140 		.word	1073829888
 664              		.cfi_endproc
 665              	.LFE57:
 667              		.section	.text.HAL_SYSCFG_GetBootMode,"ax",%progbits
 668              		.align	2
 669              		.global	HAL_SYSCFG_GetBootMode
 670              		.code	16
 671              		.thumb_func
 673              	HAL_SYSCFG_GetBootMode:
 674              	.LFB58:
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the boot mode as configured by user.
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval The boot mode as configured by user. The returned value can be one 
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *         of the following values:
ARM GAS  /tmp/ccI1gqJf.s 			page 21


 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000000 : Boot is configured in Main Flash memory 
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000100 : Boot is configured in System Flash memory 
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000300 : Boot is configured in Embedded SRAM memory 
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t  HAL_SYSCFG_GetBootMode(void)
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 675              		.loc 1 499 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return (SYSCFG->CFGR1 & SYSCFG_CFGR1_BOOT_MODE);
 680              		.loc 1 500 0
 681 0000 024B     		ldr	r3, .L60
 682 0002 1868     		ldr	r0, [r3]
 683 0004 C023     		movs	r3, #192
 684 0006 9B00     		lsls	r3, r3, #2
 685 0008 1840     		ands	r0, r3
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 686              		.loc 1 501 0
 687              		@ sp needed
 688 000a 7047     		bx	lr
 689              	.L61:
 690              		.align	2
 691              	.L60:
 692 000c 00000140 		.word	1073807360
 693              		.cfi_endproc
 694              	.LFE58:
 696              		.section	.text.HAL_SYSCFG_VREFINT_OutputSelect,"ax",%progbits
 697              		.align	2
 698              		.global	HAL_SYSCFG_VREFINT_OutputSelect
 699              		.code	16
 700              		.thumb_func
 702              	HAL_SYSCFG_VREFINT_OutputSelect:
 703              	.LFB59:
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Selects the output of internal reference voltage (VREFINT).
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The VREFINT output can be routed to(PB0) or
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        (PB1) or both.
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param SYSCFG_Vrefint_OUTPUT: new state of the Vrefint output.
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        This parameter can be one of the following values:
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_NONE
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB1
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0_PB1
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_VREFINT_OutputSelect(uint32_t SYSCFG_Vrefint_OUTPUT)
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 704              		.loc 1 516 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL18:
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
ARM GAS  /tmp/ccI1gqJf.s 			page 22


 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_SYSCFG_VREFINT_OUT_SELECT(SYSCFG_Vrefint_OUTPUT));
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Set the output Vrefint pin */
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 &= ~(SYSCFG_CFGR3_VREF_OUT);
 710              		.loc 1 521 0
 711 0000 044B     		ldr	r3, .L63
 712 0002 1A6A     		ldr	r2, [r3, #32]
 713 0004 3021     		movs	r1, #48
 714 0006 8A43     		bics	r2, r1
 715 0008 1A62     		str	r2, [r3, #32]
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 |= (uint32_t)(SYSCFG_Vrefint_OUTPUT);
 716              		.loc 1 522 0
 717 000a 1A6A     		ldr	r2, [r3, #32]
 718 000c 1043     		orrs	r0, r2
 719              	.LVL19:
 720 000e 1862     		str	r0, [r3, #32]
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 721              		.loc 1 523 0
 722              		@ sp needed
 723 0010 7047     		bx	lr
 724              	.L64:
 725 0012 C046     		.align	2
 726              	.L63:
 727 0014 00000140 		.word	1073807360
 728              		.cfi_endproc
 729              	.LFE59:
 731              		.section	.text.HAL_SYSCFG_Enable_Lock_VREFINT,"ax",%progbits
 732              		.align	2
 733              		.global	HAL_SYSCFG_Enable_Lock_VREFINT
 734              		.code	16
 735              		.thumb_func
 737              	HAL_SYSCFG_Enable_Lock_VREFINT:
 738              	.LFB60:
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Lock the SYSCFG VREF register values
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Enable_Lock_VREFINT(void)
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 739              		.loc 1 530 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Enable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 744              		.loc 1 532 0
 745 0000 034A     		ldr	r2, .L66
 746 0002 136A     		ldr	r3, [r2, #32]
 747 0004 8021     		movs	r1, #128
 748 0006 0906     		lsls	r1, r1, #24
 749 0008 0B43     		orrs	r3, r1
 750 000a 1362     		str	r3, [r2, #32]
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 751              		.loc 1 533 0
 752              		@ sp needed
ARM GAS  /tmp/ccI1gqJf.s 			page 23


 753 000c 7047     		bx	lr
 754              	.L67:
 755 000e C046     		.align	2
 756              	.L66:
 757 0010 00000140 		.word	1073807360
 758              		.cfi_endproc
 759              	.LFE60:
 761              		.section	.text.HAL_SYSCFG_Disable_Lock_VREFINT,"ax",%progbits
 762              		.align	2
 763              		.global	HAL_SYSCFG_Disable_Lock_VREFINT
 764              		.code	16
 765              		.thumb_func
 767              	HAL_SYSCFG_Disable_Lock_VREFINT:
 768              	.LFB61:
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Unlock the overall SYSCFG VREF register values
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Disable_Lock_VREFINT(void)
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 769              		.loc 1 540 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Disable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 774              		.loc 1 542 0
 775 0000 024A     		ldr	r2, .L69
 776 0002 136A     		ldr	r3, [r2, #32]
 777 0004 5B00     		lsls	r3, r3, #1
 778 0006 5B08     		lsrs	r3, r3, #1
 779 0008 1362     		str	r3, [r2, #32]
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 780              		.loc 1 543 0
 781              		@ sp needed
 782 000a 7047     		bx	lr
 783              	.L70:
 784              		.align	2
 785              	.L69:
 786 000c 00000140 		.word	1073807360
 787              		.cfi_endproc
 788              	.LFE61:
 790              		.comm	uwTick,4,4
 791              		.text
 792              	.Letext0:
 793              		.file 2 "/home/manojkumar/Ac6/SystemWorkbench/plugins/fr.ac6.mcu.externaltools.arm-none.linux64_1.
 794              		.file 3 "/home/manojkumar/Ac6/SystemWorkbench/plugins/fr.ac6.mcu.externaltools.arm-none.linux64_1.
 795              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 796              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 797              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 798              		.file 7 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 799              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
ARM GAS  /tmp/ccI1gqJf.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal.c
     /tmp/ccI1gqJf.s:20     .text.HAL_MspInit:00000000 $t
     /tmp/ccI1gqJf.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccI1gqJf.s:40     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccI1gqJf.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccI1gqJf.s:59     .text.HAL_DeInit:00000000 $t
     /tmp/ccI1gqJf.s:64     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccI1gqJf.s:105    .text.HAL_DeInit:00000024 $d
     /tmp/ccI1gqJf.s:111    .text.HAL_InitTick:00000000 $t
     /tmp/ccI1gqJf.s:116    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccI1gqJf.s:154    .text.HAL_InitTick:00000024 $d
     /tmp/ccI1gqJf.s:159    .text.HAL_Init:00000000 $t
     /tmp/ccI1gqJf.s:164    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccI1gqJf.s:195    .text.HAL_Init:0000001c $d
     /tmp/ccI1gqJf.s:200    .text.HAL_IncTick:00000000 $t
     /tmp/ccI1gqJf.s:205    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccI1gqJf.s:223    .text.HAL_IncTick:0000000c $d
                            *COM*:00000004 uwTick
     /tmp/ccI1gqJf.s:228    .text.HAL_GetTick:00000000 $t
     /tmp/ccI1gqJf.s:233    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccI1gqJf.s:249    .text.HAL_GetTick:00000008 $d
     /tmp/ccI1gqJf.s:254    .text.HAL_Delay:00000000 $t
     /tmp/ccI1gqJf.s:259    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccI1gqJf.s:298    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccI1gqJf.s:303    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccI1gqJf.s:322    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccI1gqJf.s:327    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccI1gqJf.s:332    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccI1gqJf.s:351    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccI1gqJf.s:356    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccI1gqJf.s:361    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccI1gqJf.s:375    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccI1gqJf.s:380    .text.HAL_GetREVID:00000000 $t
     /tmp/ccI1gqJf.s:385    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccI1gqJf.s:402    .text.HAL_GetREVID:00000008 $d
     /tmp/ccI1gqJf.s:407    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccI1gqJf.s:412    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccI1gqJf.s:430    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccI1gqJf.s:435    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
     /tmp/ccI1gqJf.s:440    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccI1gqJf.s:459    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
     /tmp/ccI1gqJf.s:464    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
     /tmp/ccI1gqJf.s:469    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccI1gqJf.s:488    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
     /tmp/ccI1gqJf.s:493    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccI1gqJf.s:498    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccI1gqJf.s:517    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccI1gqJf.s:522    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccI1gqJf.s:527    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccI1gqJf.s:546    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccI1gqJf.s:551    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccI1gqJf.s:556    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccI1gqJf.s:575    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccI1gqJf.s:580    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccI1gqJf.s:585    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccI1gqJf.s:604    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
ARM GAS  /tmp/ccI1gqJf.s 			page 25


     /tmp/ccI1gqJf.s:609    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:00000000 $t
     /tmp/ccI1gqJf.s:614    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:00000000 HAL_DBGMCU_DBG_EnableLowPowerConfig
     /tmp/ccI1gqJf.s:634    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:0000000c $d
     /tmp/ccI1gqJf.s:639    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:00000000 $t
     /tmp/ccI1gqJf.s:644    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:00000000 HAL_DBGMCU_DBG_DisableLowPowerConfig
     /tmp/ccI1gqJf.s:663    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000c $d
     /tmp/ccI1gqJf.s:668    .text.HAL_SYSCFG_GetBootMode:00000000 $t
     /tmp/ccI1gqJf.s:673    .text.HAL_SYSCFG_GetBootMode:00000000 HAL_SYSCFG_GetBootMode
     /tmp/ccI1gqJf.s:692    .text.HAL_SYSCFG_GetBootMode:0000000c $d
     /tmp/ccI1gqJf.s:697    .text.HAL_SYSCFG_VREFINT_OutputSelect:00000000 $t
     /tmp/ccI1gqJf.s:702    .text.HAL_SYSCFG_VREFINT_OutputSelect:00000000 HAL_SYSCFG_VREFINT_OutputSelect
     /tmp/ccI1gqJf.s:727    .text.HAL_SYSCFG_VREFINT_OutputSelect:00000014 $d
     /tmp/ccI1gqJf.s:732    .text.HAL_SYSCFG_Enable_Lock_VREFINT:00000000 $t
     /tmp/ccI1gqJf.s:737    .text.HAL_SYSCFG_Enable_Lock_VREFINT:00000000 HAL_SYSCFG_Enable_Lock_VREFINT
     /tmp/ccI1gqJf.s:757    .text.HAL_SYSCFG_Enable_Lock_VREFINT:00000010 $d
     /tmp/ccI1gqJf.s:762    .text.HAL_SYSCFG_Disable_Lock_VREFINT:00000000 $t
     /tmp/ccI1gqJf.s:767    .text.HAL_SYSCFG_Disable_Lock_VREFINT:00000000 HAL_SYSCFG_Disable_Lock_VREFINT
     /tmp/ccI1gqJf.s:786    .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
