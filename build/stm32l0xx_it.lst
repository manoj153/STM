ARM GAS  /tmp/ccD2YJQq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32l0xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB37:
  27              		.file 1 "Src/stm32l0xx_it.c"
   1:Src/stm32l0xx_it.c **** /**
   2:Src/stm32l0xx_it.c ****   ******************************************************************************
   3:Src/stm32l0xx_it.c ****   * @file    stm32l0xx_it.c
   4:Src/stm32l0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32l0xx_it.c ****   ******************************************************************************
   6:Src/stm32l0xx_it.c ****   *
   7:Src/stm32l0xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32l0xx_it.c ****   *
   9:Src/stm32l0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32l0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32l0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32l0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32l0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32l0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32l0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32l0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32l0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32l0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32l0xx_it.c ****   *
  20:Src/stm32l0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32l0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32l0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32l0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32l0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32l0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32l0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32l0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32l0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32l0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32l0xx_it.c ****   *
  31:Src/stm32l0xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccD2YJQq.s 			page 2


  32:Src/stm32l0xx_it.c ****   */
  33:Src/stm32l0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32l0xx_it.c **** #include "stm32l0xx_hal.h"
  35:Src/stm32l0xx_it.c **** #include "stm32l0xx.h"
  36:Src/stm32l0xx_it.c **** #include "stm32l0xx_it.h"
  37:Src/stm32l0xx_it.c **** 
  38:Src/stm32l0xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32l0xx_it.c **** 
  40:Src/stm32l0xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32l0xx_it.c **** 
  42:Src/stm32l0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32l0xx_it.c **** 
  44:Src/stm32l0xx_it.c **** /******************************************************************************/
  45:Src/stm32l0xx_it.c **** /*            Cortex-M0+ Processor Interruption and Exception Handlers         */ 
  46:Src/stm32l0xx_it.c **** /******************************************************************************/
  47:Src/stm32l0xx_it.c **** 
  48:Src/stm32l0xx_it.c **** /**
  49:Src/stm32l0xx_it.c **** * @brief This function handles Non maskable interrupt.
  50:Src/stm32l0xx_it.c **** */
  51:Src/stm32l0xx_it.c **** void NMI_Handler(void)
  52:Src/stm32l0xx_it.c **** {
  28              		.loc 1 52 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  53:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  54:Src/stm32l0xx_it.c **** 
  55:Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  56:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  57:Src/stm32l0xx_it.c **** 
  58:Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  59:Src/stm32l0xx_it.c **** }
  33              		.loc 1 59 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE37:
  39 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB38:
  60:Src/stm32l0xx_it.c **** 
  61:Src/stm32l0xx_it.c **** /**
  62:Src/stm32l0xx_it.c **** * @brief This function handles Hard fault interrupt.
  63:Src/stm32l0xx_it.c **** */
  64:Src/stm32l0xx_it.c **** void HardFault_Handler(void)
  65:Src/stm32l0xx_it.c **** {
  47              		.loc 1 65 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
ARM GAS  /tmp/ccD2YJQq.s 			page 3


  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE38:
  58 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	SVC_Handler
  61              		.code	16
  62              		.thumb_func
  64              	SVC_Handler:
  65              	.LFB39:
  66:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  67:Src/stm32l0xx_it.c **** 
  68:Src/stm32l0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  69:Src/stm32l0xx_it.c ****   while (1)
  70:Src/stm32l0xx_it.c ****   {
  71:Src/stm32l0xx_it.c ****   }
  72:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  73:Src/stm32l0xx_it.c **** 
  74:Src/stm32l0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  75:Src/stm32l0xx_it.c **** }
  76:Src/stm32l0xx_it.c **** 
  77:Src/stm32l0xx_it.c **** /**
  78:Src/stm32l0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  79:Src/stm32l0xx_it.c **** */
  80:Src/stm32l0xx_it.c **** void SVC_Handler(void)
  81:Src/stm32l0xx_it.c **** {
  66              		.loc 1 81 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  82:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  83:Src/stm32l0xx_it.c **** 
  84:Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  85:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  86:Src/stm32l0xx_it.c **** 
  87:Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  88:Src/stm32l0xx_it.c **** }
  71              		.loc 1 88 0
  72              		@ sp needed
  73 0000 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE39:
  77 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	PendSV_Handler
  80              		.code	16
  81              		.thumb_func
  83              	PendSV_Handler:
  84              	.LFB40:
  89:Src/stm32l0xx_it.c **** 
  90:Src/stm32l0xx_it.c **** /**
  91:Src/stm32l0xx_it.c **** * @brief This function handles Pendable request for system service.
  92:Src/stm32l0xx_it.c **** */
  93:Src/stm32l0xx_it.c **** void PendSV_Handler(void)
  94:Src/stm32l0xx_it.c **** {
ARM GAS  /tmp/ccD2YJQq.s 			page 4


  85              		.loc 1 94 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  95:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
  96:Src/stm32l0xx_it.c **** 
  97:Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
  98:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
  99:Src/stm32l0xx_it.c **** 
 100:Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 101:Src/stm32l0xx_it.c **** }
  90              		.loc 1 101 0
  91              		@ sp needed
  92 0000 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE40:
  96 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	SysTick_Handler
  99              		.code	16
 100              		.thumb_func
 102              	SysTick_Handler:
 103              	.LFB41:
 102:Src/stm32l0xx_it.c **** 
 103:Src/stm32l0xx_it.c **** /**
 104:Src/stm32l0xx_it.c **** * @brief This function handles System tick timer.
 105:Src/stm32l0xx_it.c **** */
 106:Src/stm32l0xx_it.c **** void SysTick_Handler(void)
 107:Src/stm32l0xx_it.c **** {
 104              		.loc 1 107 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 10B5     		push	{r4, lr}
 109              	.LCFI0:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 108:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 109:Src/stm32l0xx_it.c **** 
 110:Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 111:Src/stm32l0xx_it.c ****   HAL_IncTick();
 113              		.loc 1 111 0
 114 0002 FFF7FEFF 		bl	HAL_IncTick
 115              	.LVL0:
 112:Src/stm32l0xx_it.c ****   HAL_SYSTICK_IRQHandler();
 116              		.loc 1 112 0
 117 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 118              	.LVL1:
 113:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 114:Src/stm32l0xx_it.c **** 
 115:Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 116:Src/stm32l0xx_it.c **** }
 119              		.loc 1 116 0
 120              		@ sp needed
 121 000a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccD2YJQq.s 			page 5


 122              		.cfi_endproc
 123              	.LFE41:
 125              		.text
 126              	.Letext0:
 127              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 128              		.file 3 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
ARM GAS  /tmp/ccD2YJQq.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_it.c
     /tmp/ccD2YJQq.s:20     .text.NMI_Handler:00000000 $t
     /tmp/ccD2YJQq.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccD2YJQq.s:40     .text.HardFault_Handler:00000000 $t
     /tmp/ccD2YJQq.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccD2YJQq.s:59     .text.SVC_Handler:00000000 $t
     /tmp/ccD2YJQq.s:64     .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccD2YJQq.s:78     .text.PendSV_Handler:00000000 $t
     /tmp/ccD2YJQq.s:83     .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccD2YJQq.s:97     .text.SysTick_Handler:00000000 $t
     /tmp/ccD2YJQq.s:102    .text.SysTick_Handler:00000000 SysTick_Handler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
